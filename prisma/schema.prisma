// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TypingEntry {
  id       Int   @id @default(autoincrement())
  wpm      Float
  time     Float
  mistakes Int
  accuracy Float

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  userId    String
}

model Pdf {
  id         Int         @id @default(autoincrement())
  paragraphs Paragraph[]
  User       User        @relation(fields: [userId], references: [id])
  userId     String
  title      String      @default("")
}

model Paragraph {
  id    Int    @id @default(autoincrement())
  text  String
  Pdf   Pdf    @relation(fields: [pdfId], references: [id])
  pdfId Int
}

model User {
  id               String        @id
  name             String
  email            String
  emailVerified    Boolean
  image            String?
  createdAt        DateTime
  updatedAt        DateTime
  sessions         Session[]
  accounts         Account[]
  TypingEntry      TypingEntry[]
  Pdfs             Pdf[]
  stripeCustomerId String?       @map("stripeCustomerId")

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Subscription {
  id                   String    @id
  plan                 String
  referenceId          String
  stripeCustomerId     String?
  stripeSubscriptionId String?
  status               String
  periodStart          DateTime?
  periodEnd            DateTime?
  cancelAtPeriodEnd    Boolean?
  seats                Int?
  trialStart           DateTime?
  trialEnd             DateTime?

  @@map("subscription")
}
